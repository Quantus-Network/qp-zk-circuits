---
    name: Continuous Integration
    
    on:
      pull_request:
        paths-ignore:
          - "docs/**"
          - "*.md"
          - "LICENSE"
      push:
        branches:
          - main
        paths-ignore:
          - "docs/**"
          - "*.md"
          - "LICENSE"
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    
    env:
      CARGO_INCREMENTAL: 0
      CARGO_TERM_COLOR: always
      CARGO_NET_RETRY: 10
      CARGO_NET_TIMEOUT: 60
    
    jobs:
      fast-checks:
        name: üèÅ Fast Checks (Format)
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Install required components
            run: rustup component add rustfmt --toolchain nightly
          - name: Install taplo
            run: cargo install taplo-cli --locked
          - name: Run format checks
            run: |
              taplo format --check --config taplo.toml
              cargo +nightly fmt --all -- --check
    
      test-workspace:
        name: üß™ Test Workspace
        needs: fast-checks
        runs-on: ${{ matrix.os }}
        timeout-minutes: 30
        strategy:
          fail-fast: false
          matrix:
            os:
              - ubuntu-latest
              - macos-latest
            rust:
              - stable
        steps:
          - uses: actions/checkout@v4
          - name: Install Rust ${{ matrix.rust }}
            uses: dtolnay/rust-toolchain@master
            with:
              toolchain: ${{ matrix.rust }}
          - name: Cache cargo registry
            uses: actions/cache@v4
            with:
              path: |
                ~/.cargo/registry/index/
                ~/.cargo/registry/cache/
                ~/.cargo/git/db/
                target/
              key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
              restore-keys: |
                ${{ runner.os }}-cargo-
          - name: Build workspace
            run: cargo build --workspace --locked
          - name: Test workspace (fast tests)
            run: cargo test --workspace --locked --lib --bins -- --skip aggregator_tests --skip circuit_data_tests --skip storage_proof_tests --skip prover_tests --skip verifier_tests
          - name: Test workspace (release, fast tests)
            run: cargo test --workspace --locked --release --lib --bins -- --skip aggregator_tests --skip circuit_data_tests --skip storage_proof_tests --skip prover_tests --skip verifier_tests
    
      analysis:
        name: ü§ñ Analysis (Clippy & Doc)
        needs: fast-checks
        runs-on: ubuntu-latest
        timeout-minutes: 20
        steps:
          - uses: actions/checkout@v4
          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
            with:
              components: clippy, rust-src
          - name: Cache cargo registry
            uses: actions/cache@v4
            with:
              path: |
                ~/.cargo/registry/index/
                ~/.cargo/registry/cache/
                ~/.cargo/git/db/
                target/
              key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
              restore-keys: |
                ${{ runner.os }}-cargo-
          - name: Run clippy (workspace)
            run: cargo clippy --workspace --all-targets --all-features --locked -- -D warnings
          - name: Generate documentation
            run: cargo doc --workspace --locked --no-deps --all-features
          - name: Check documentation
            run: cargo doc --workspace --locked --no-deps --all-features --document-private-items
    
      slow-tests:
        name: üêå Slow Tests (Crypto-heavy)
        needs: fast-checks
        runs-on: ubuntu-latest
        timeout-minutes: 60
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        steps:
          - uses: actions/checkout@v4
          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
          - name: Cache cargo registry
            uses: actions/cache@v4
            with:
              path: |
                ~/.cargo/registry/index/
                ~/.cargo/registry/cache/
                ~/.cargo/git/db/
                target/
              key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
              restore-keys: |
                ${{ runner.os }}-cargo-
          - name: Run slow crypto tests
            run: |
              cargo test -p tests --release aggregator_tests
              cargo test -p tests --release circuit_data_tests  
              cargo test -p tests --release storage_proof_tests
              cargo test -p tests --release prover_tests
              cargo test -p tests --release verifier_tests

      security-audit:
        name: üîí Security Audit
        needs: fast-checks
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
          - uses: actions/checkout@v4
          - name: Install cargo-audit
            run: cargo install cargo-audit --locked
          - name: Run security audit
            run: cargo audit