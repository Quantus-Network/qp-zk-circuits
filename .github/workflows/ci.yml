---
    name: Continuous Integration
    
    on:
      pull_request:
        paths-ignore:
          - "docs/**"
          - "*.md"
          - "LICENSE"
      push:
        branches:
          - main
        paths-ignore:
          - "docs/**"
          - "*.md"
          - "LICENSE"
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    
    env:
      CARGO_INCREMENTAL: 0
      CARGO_TERM_COLOR: always
    
    jobs:
      fast-checks:
        name: üèÅ Fast Checks (Format)
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Install required components
            run: rustup component add rustfmt --toolchain nightly
          - name: Install taplo
            run: cargo install taplo-cli --locked
          - name: Run format checks
            run: |
              taplo format --check --config taplo.toml
              cargo +nightly fmt --all -- --check
    
      test-workspace:
        name: üß™ Test Workspace
        needs: fast-checks
        runs-on: ${{ matrix.os }}
        strategy:
          fail-fast: false
          matrix:
            os:
              - ubuntu-latest
              - macos-latest
            rust:
              - stable
        steps:
          - uses: actions/checkout@v4
          - name: Install Rust ${{ matrix.rust }}
            uses: dtolnay/rust-toolchain@master
            with:
              toolchain: ${{ matrix.rust }}
          - name: Cache cargo registry
            uses: actions/cache@v3
            with:
              path: |
                ~/.cargo/registry
                ~/.cargo/git
                target
              key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          - name: Build workspace
            run: cargo build --workspace --locked
          - name: Test workspace
            run: cargo test --workspace --locked
          - name: Test workspace (release)
            run: cargo test --workspace --locked --release
    
      analysis:
        name: ü§ñ Analysis (Clippy & Doc)
        needs: fast-checks
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
            with:
              components: clippy, rust-src
          - name: Cache cargo registry
            uses: actions/cache@v3
            with:
              path: |
                ~/.cargo/registry
                ~/.cargo/git
                target
              key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          - name: Run clippy (workspace)
            run: cargo clippy --workspace --all-targets --all-features --locked -- -D warnings
          - name: Run clippy (individual crates)
            run: |
              cargo clippy -p zk-circuits-common --all-targets --all-features --locked -- -D warnings
              cargo clippy -p voting-circuit --all-targets --all-features --locked -- -D warnings
              cargo clippy -p wormhole-circuit --all-targets --all-features --locked -- -D warnings
              cargo clippy -p wormhole-aggregator --all-targets --all-features --locked -- -D warnings
              cargo clippy -p circuit-builder --all-targets --all-features --locked -- -D warnings
              cargo clippy -p wormhole-example --all-targets --all-features --locked -- -D warnings
              cargo clippy -p wormhole-prover --all-targets --all-features --locked -- -D warnings
              cargo clippy -p tests --all-targets --all-features --locked -- -D warnings
              cargo clippy -p wormhole-verifier --all-targets --all-features --locked -- -D warnings
          - name: Generate documentation
            run: cargo doc --workspace --locked --no-deps --all-features
          - name: Check documentation
            run: cargo doc --workspace --locked --no-deps --all-features --document-private-items
    
      security-audit:
        name: üîí Security Audit
        needs: fast-checks
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Install cargo-audit
            run: cargo install cargo-audit --locked
          - name: Run security audit
            run: cargo audit